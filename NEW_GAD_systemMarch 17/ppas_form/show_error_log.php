<?php
// Set content type to text
header('Content-Type: text/plain');

// Get the probable error log locations
$possibleLogFiles = [
    __DIR__ . '/php_errors.log',
    'C:/wamp64/logs/php_error.log',
    dirname(__DIR__) . '/php_errors.log',
    ini_get('error_log')
];

echo "Checking possible PHP error log locations...\n\n";

foreach ($possibleLogFiles as $index => $logFile) {
    echo "[$index] Checking: $logFile\n";
    
    if (file_exists($logFile)) {
        echo "✓ File exists! Contents of the last 50 lines:\n";
        echo "=============================================\n";
        
        // Read the last 50 lines
        $logContent = file_get_contents($logFile);
        $lines = explode("\n", $logContent);
        $lastLines = array_slice($lines, -50);
        
        echo implode("\n", $lastLines);
        echo "\n\n";
    } else {
        echo "✗ File does not exist.\n\n";
    }
}

// Also check if there's any php_errors.log in the current directory or parent directories
echo "Searching for php_errors.log in nearby directories...\n";

// Function to search for files
function findErrorLogs($directory, $maxDepth = 2, $currentDepth = 0) {
    if ($currentDepth > $maxDepth) return [];
    
    $foundFiles = [];
    
    try {
        $files = scandir($directory);
        
        foreach ($files as $file) {
            if ($file === '.' || $file === '..') continue;
            
            $path = $directory . '/' . $file;
            
            if (is_file($path) && (strpos($file, 'error') !== false || strpos($file, 'log') !== false)) {
                $foundFiles[] = $path;
            } else if (is_dir($path)) {
                $foundFiles = array_merge($foundFiles, findErrorLogs($path, $maxDepth, $currentDepth + 1));
            }
        }
    } catch (Exception $e) {
        echo "Error scanning directory $directory: " . $e->getMessage() . "\n";
    }
    
    return $foundFiles;
}

$additionalLogs = findErrorLogs(__DIR__, 1);

foreach ($additionalLogs as $index => $logFile) {
    echo "Found additional log: $logFile\n";
    
    if (filesize($logFile) > 0) {
        echo "Contents of the last 20 lines:\n";
        echo "============================\n";
        
        // Read the last 20 lines
        $logContent = file_get_contents($logFile);
        $lines = explode("\n", $logContent);
        $lastLines = array_slice($lines, -20);
        
        echo implode("\n", $lastLines);
        echo "\n\n";
    } else {
        echo "File is empty.\n\n";
    }
}

// Display phpinfo error log setting
echo "PHP error_log setting according to phpinfo():\n";
echo ini_get('error_log') . "\n\n";

// Also check if there are any error logs generated by our debug script
if (file_exists(__DIR__ . '/debug_log.txt')) {
    echo "Found debug_log.txt file. Contents of the last 20 lines:\n";
    echo "==================================================\n";
    
    $logContent = file_get_contents(__DIR__ . '/debug_log.txt');
    $lines = explode("\n", $logContent);
    $lastLines = array_slice($lines, -20);
    
    echo implode("\n", $lastLines);
}
?> 